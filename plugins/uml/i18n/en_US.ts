export default {
  ddei: {
    uml: {
      active: 'Active',

      state: 'State',

      substate: 'Substate',
      compstate: 'Composite',
      initstate: 'Initial',
      finalstate: 'Final',
      statecontainer: 'StateC',

      object: 'Object',
      objname: 'Object Name',
      life: 'Lifeline',
      objlife: 'ObjectLifeline',
      seqobj: 'Sequence',
      rolelife: 'RoleLifeline',

      hcross: "HoriCros",
      vcross: "VertCros",

      sendsignal: "SendSignal",
      recsignal: "ReceiveSignal",

      recevent: 'ReceiveEvent',
      dot: "Dot",

      pause: 'Pause',

      hlane: 'HoriLane',
      vlane: 'VertLane',

      matrix: 'Matrix',
      control: 'Control',
      controlflow: 'ControlF',

      node: 'Node',
      nodeins: 'NodeInst',
      initnode: "InitialN",
      forknode: "ForkNode",
      endnode: "EndNode",
      startnode1: 'StartN',
      endnode1: 'EndN',
      flowend: 'FlowEnd',
      invoke: 'Invoke',
      transition: 'Transition',

      fork: 'Fork',
      container: 'Container',

      case: "UseCase",
      ext: 'Ext',
      extpoint: 'ExtPoint',
      extcase: 'ExtUseC',

      system: 'System',
      role: 'Role',

      syspart: 'SysParti',
      participal: 'Participant',

      coop: 'Collab',
      assis: 'Assoc',

      generalization: 'Genera',
      include: 'Include',
      ui: 'UI',
      interface: 'Interf',
      reqinte: 'ReqInter',
      class: 'Class',
      classname: 'ClassName',
      simpleclass: 'SimpCls',
      activeclass: 'ActCLs',
      active1: 'Active',
      activebreak: 'ActBreak',
      muti: 'Multi',
      enum: 'Enum',
      datatype: 'DataType',
      signal: 'Signal',
      original: 'Original',
      constraint: 'Constr',
      collection: 'Collect',
      package: 'Package',
      overview: 'Overvi',
      model: 'Model',
      relation: 'Relatio',
      implement: 'Implem',
      together: 'Aggr',
      compose: 'Compos',
      dependent: 'Depen',
      link: 'Link',
      relationship: 'Relatio',

      component: 'Component',
      compbox: 'CompBox',
      compins: 'CompInst',
      direct: 'Direct',
      msg: 'Message',
      async: 'Async',
      asyncmsg: 'AsyncMsg',
      project: 'Project',
      projins: 'ProjInst',
      deploydes: 'DeployD',
      depdesins: 'DeployDI',
      sketchmap: "Sketch",
      communication: 'Communi',
      extend: 'Extend',
      manifest: 'Manife',
      deploy: 'Deploy',
      entity: 'Entity',
      alternative: 'Alterna',
      loopnative: 'LoopFrag',
      altnative: 'AltFrag',
      optnative: 'OptFrag',
      paranative: 'ParFrag',
      customnative: 'CustomF',
      objdel: 'ObjDel',
      edge: 'Edge',
      switch: 'Decisi',
      simplehistory: 'SimHis',
      detailhistroy: 'DetHis',
      convert: 'Convert',
      groups: {
        active: "UML-Active",
        case: "UML-UseCase",
        class: 'UML-Class',
        component: 'UML-Component',
        cooperate: 'UML-Cooperate',
        deploy: "UML-Deploy",
        sequence: "UML-Sequence",
        state: "UML-State",
      }
    }
  }
};